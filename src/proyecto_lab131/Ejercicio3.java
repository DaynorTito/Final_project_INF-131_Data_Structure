/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto_lab131;

import Estructuras.*;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import javax.swing.table.DefaultTableModel;
import objetos.*;

/**
 *
 * @author DAYNOR
 */
public class Ejercicio3 extends javax.swing.JFrame {
       private CCircularPro prodGral = new CCircularPro();
    private CSimpleMercadoMin mercadosMin;
    private PilaMercadoMay mercadosMay;

    public CCircularPro getProdGral() {
        return prodGral;
    }

    public void setProdGral(CCircularPro prodGral) {
        this.prodGral = prodGral;
    }

    public CSimpleMercadoMin getMercadosMin() {
        return mercadosMin;
    }

    public void setMercadosMin(CSimpleMercadoMin mercadosMin) {
        this.mercadosMin = mercadosMin;
    }

    public PilaMercadoMay getMercadosMay() {
        return mercadosMay;
    }

    public void setMercadosMay(PilaMercadoMay mercadosMay) {
        this.mercadosMay = mercadosMay;
    }
    /**
     * Creates new form Ejercicio3
     */
    public Ejercicio3() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMe = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nomProd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        predProd = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(177, 208, 224));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/hogar .png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sitka Small", 0, 21)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Mercados con donde se encuentra el producto buscado con un menor precio al introcucido");

        tablaMe.setBackground(new java.awt.Color(204, 204, 204));
        tablaMe.setFont(new java.awt.Font("Sitka Small", 0, 13)); // NOI18N
        tablaMe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Hora Apertura", "Hora Cierre", "Macrodistrito", "Direccion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaMe);

        jLabel2.setFont(new java.awt.Font("Sitka Small", 0, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 51));
        jLabel2.setText("Intro Nombre Producto");

        nomProd.setFont(new java.awt.Font("Sitka Small", 0, 13)); // NOI18N
        nomProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomProdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Sitka Small", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("Precio");

        predProd.setFont(new java.awt.Font("Sitka Small", 0, 13)); // NOI18N

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Sitka Small", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mostrar.png"))); // NOI18N
        jButton1.setText("Mostrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(predProd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addComponent(nomProd, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomProd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(predProd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            limpiar();
            mostrarMercadosMay(obtIdOProd(this.nomProd.getText()));
            mostrarMercadosMin(obtIdOProd(this.nomProd.getText()));
        } catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          VentanaInicio ini = new VentanaInicio();
        ini.setProdsGral(prodGral);
        ini.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nomProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomProdActionPerformed
    public void mostrarMercadosMin(String idPro) throws IOException{
        ObjectInputStream Registro = null;
        try{
            Registro = new ObjectInputStream(new FileInputStream("datos1.dat"));
            while(true){
                mercadosMin = new CSimpleMercadoMin();
                mercadosMin = (CSimpleMercadoMin)Registro.readObject();
                // codigo para mostrar
                CSimpleMercadoMin aux = new CSimpleMercadoMin();
            while(!mercadosMin.esvacia()){
                MercadoMinorista mxx = mercadosMin.eliminar();
                aux.adicionar(mxx);
                if(tieneProYpre(mxx.getPuestos(),idPro,Double.parseDouble(this.predProd.getText())))
                    adicionarTabla(mxx.getNombre(),mxx.getHoraApertura(), mxx.getHoraCierre(),mxx.getMacrodistrito(),mxx.getDireccion());
            }
            mercadosMin.vaciar(aux);
        // HAASTAA AKIII
            }
            
        } catch(Exception e){
            System.out.println(e);
        }
        finally{
            Registro.close();
        }
    }
    public boolean tieneProYpre(LSimpleCPu pu, String id, double precio){
        NodoPu r = pu.getP();
        boolean se = false;
        while(r.getSig()!=pu.getP()){
            if(tieneCamion(r.getPuest().getProductos().getP(), id, precio)){
                se = true;
            }
            r = r.getSig();
        }
        if(tieneCamion(r.getPuest().getProductos().getP(), id, precio)){
                se = true;
            }
        return se;
    }
    public void mostrarMercadosMay(String idPro) throws IOException{
        ObjectInputStream Registro = null;
        try{
            
            Registro = new ObjectInputStream(new FileInputStream("datos2.dat"));
            while(true){
                mercadosMay = new PilaMercadoMay();
                mercadosMay = (PilaMercadoMay)Registro.readObject();
                PilaMercadoMay aux = new PilaMercadoMay();
            while(!mercadosMay.esvacia()){
                MercadoMayorista mxx = mercadosMay.eliminar();
                aux.adicionar( mxx);
                if(verificaMercadoMay(mxx.getCamiones(), mxx.getSectores(),idPro,Double.parseDouble(this.predProd.getText())))
                    adicionarTabla(mxx.getNombre(),mxx.getHoraApertura(), mxx.getHoraCierre(),mxx.getMacrodistrito(),mxx.getDireccion());
        }
        mercadosMay.vaciar(aux);
            }
            
        } catch(Exception e){
            System.out.println(e);
        }
        finally{
            Registro.close();
        }
    }
    private boolean verificaMercadoMay(LDobleCa camiones, PilaSe sectores, String idPro, double precioPro) {
        if(camionesTiene(camiones.getP(),idPro,precioPro)||sectoresTiene(sectores,idPro,precioPro))
            return true;
        return false;
    }
    public boolean sectoresTiene(PilaSe sec,String idpro,double prepro){
        PilaSe aux = new PilaSe();
        boolean se = false;
        while(!sec.esvacia()){
            Sector sc = sec.eliminar();
            aux.adicionar(sc);
            if(enElSectorExist(sc.getPuestos(),idpro,prepro))
                se = true;
        }
        sec.vaciar(aux);
        return se;
    }
    public boolean enElSectorExist(LSimpleCPu pu, String id, double prec){
        NodoPu r = pu.getP();
        boolean sw = false;
        while(r.getSig()!=pu.getP()){
            if(tieneCamion(r.getPuest().getProductos().getP(), id, prec))
                sw = true;
            r = r.getSig();
        }
        if(tieneCamion(r.getPuest().getProductos().getP(), id, prec))
            sw = true;
        return sw;
    }
    public boolean camionesTiene(NodoCa r, String idPro, double prec){
        if(r!=null){
            if(tieneCamion(r.getCamion().getProductos().getP(),idPro,prec))
                return true;
            return camionesTiene(r.getSig(),idPro,prec);
        } else
            return false;
    }
        private String obtIdOProd(String nombre){
        int nro = prodGral.nroelem();
        String id = "";
        for (int i = 0; i < 10; i++) {
            Producto px = prodGral.eliminar();
            prodGral.adicionar(px);
            if(px.getNombre().equalsIgnoreCase(nombre))
                id = px.getIdProd();
        }
        return id;
    }
    public boolean tieneCamion(NodoPr r,String nom, double pre){
        if(r!=null){
            if(r.getIdProducto().equalsIgnoreCase(nom) && r.getPrecio()<=pre)
                return true;
            return tieneCamion(r.getSig(),nom,pre);
        } else
            return false;
    }
    private void adicionarTabla(String nombre, String horaA, String horaC, String macro, String direc) {
        DefaultTableModel datos = (DefaultTableModel)this.tablaMe.getModel();
        Object[] fila = new Object[5];
        fila[0] = nombre;
        fila[1] = horaA;
        fila[2] = horaC;
        fila[3] = macro;
        fila[4] = direc;
        datos.addRow(fila);
    }
    public void limpiar() {
        DefaultTableModel datos = (DefaultTableModel)tablaMe.getModel();
        int n = this.tablaMe.getRowCount()-1;
        for(int i = n; i >=0 ; i--){
            datos.removeRow(this.tablaMe.getRowCount()-1);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ejercicio3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomProd;
    private javax.swing.JTextField predProd;
    private javax.swing.JTable tablaMe;
    // End of variables declaration//GEN-END:variables


}
